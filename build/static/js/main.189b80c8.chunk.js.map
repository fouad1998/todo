{"version":3,"sources":["media/alarm.mp3","media/break-time.mp3","media/ticToc.mp3","utility.ts","Components/Adder.tsx","Components/Item.tsx","Components/TodayReport.tsx","Components/HoursPerDay.tsx","Components/Svg.tsx","Components/ToDoList.tsx","Components/LCD.tsx","Components/Header.tsx","Components/Param.tsx","Components/Note.tsx","index.tsx"],"names":["module","exports","DateFr","date","dateq","split","Date","greaterThen","o","getFullYear","getMonth","getDate","equal","greaterOrEqual","countSeconds","str","Array","isArray","s","item","intervals","map","parseInt","reformate","f","toString","today","formateDate","NOW","formateTime","seconds","HH","Math","floor","MM","SS","days","RANGE","TodoAdd","props","addElement","showGroupProposals","groups","warnings","successful","ITEM","state","name","time","timeBegin","expectedDate","note","group","daily","option","id","add","bind","this","status","test","dateExpected","SEND","timeLeft","isAchieved","finishedDay","modify","undefined","DIFFERENCE","WANTEDBEGIN","WANTEDLEFT","setState","className","role","type","onClick","aria-hidden","placeholder","value","onChange","e","currentTarget","readOnly","onInput","filter","el","indexOf","length","i","key","checked","aria-label","React","Item","param","LATE","toLocaleUpperCase","controllers","start","remove","to","TodayReport","ref","working","dataPlot","width","height","data","selection","update","selectedDay","nextProps","nextState","max","forEach","push","y","d3","domain","range","SELECTION","html","widthUsedDraw","append","selectAll","enter","attr","_","hour","d","on","CONSTWIDTH","CONSTHEIGHT","TEXTPOSITIONX","TEXTPOSITIONY","RECTPOSITIONX","RECTPOSITIONY","SHOWDETAILTS","text","toFixed","RECTSHOWDETAILS","DETAILS","setAttribute","style","AXES","fill","current","_draw","get","Nav","htmlFor","defaultValue","LASTDATE","DATE","setDate","REFORMATEDDATE","DAY","getDay","INDEX","display","viewBox","HoursPerDay","selectedWeek","jobs","index","findIndex","v","tasksNumber","HEIGHTUSEDDRAW","lastDate","console","log","axes","substr","linesGroup","reformatedDate","Svg","countHour","os","l","TodoAddList","startWork","removeWork","myList","hist","staticOngle","Map","sort","a","b","showDate","showGroup","path","exact","_list","_hist","_static","Show","completed","currentTime","currentDate","button","playPauseEffect","pause","reprise","stop","Header","Param","updateOptions","leave","options","reposeTime","stay","workingTime","isNaN","Note","alarm","require","breakTimeSound","ticToc","Container","selected","interval","beep","Audio","showContent","counter","stayWorking","leaveWorking","modifyIndex","ticTocPlayingStatus","alter","setTimeout","src","loop","list","JSON","parse","window","localStorage","getItem","_createMapFromObject","stringify","toLowerCase","dailys","found","stopWork","stopAlarm","TODAY","itemq","newItem","Object","assign","callback","object","obj","keys","set","tabTemp","join","setItem","source","realTime","WORK","has","currentHourWork","getHours","play","clearInterval","_createObjectFromMap","_workingOn","setInterval","alert","render","match","params","getMinutes","document","getElementById"],"mappings":"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","file":"static/js/main.189b80c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.0919823e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/break-time.be4257c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ticToc.c7d07465.mp3\";","export function DateFr(date: string | number) {\n  if (typeof date === 'string') {\n    const dateq = date.split('/')\n    date = dateq[1] + '/' + dateq[0] + '/' + dateq[2]\n    return new Date(date)\n  } else {\n    return new Date(date)\n  }\n}\nexport function greaterThen(date: Date, o: Date): boolean {\n  if (date.getFullYear() > o.getFullYear()) {\n    return true\n  }\n  if (date.getFullYear() === o.getFullYear() && date.getMonth() > o.getMonth()) {\n    return true\n  }\n  if (\n    date.getFullYear() === o.getFullYear() &&\n    date.getMonth() === o.getMonth() &&\n    date.getDate() > o.getDate()\n  ) {\n    return true\n  }\n  return false\n}\nexport function equal(date: Date, o: Date): boolean {\n  if (\n    date.getFullYear() === o.getFullYear() &&\n    date.getMonth() === o.getMonth() &&\n    date.getDate() === o.getDate()\n  ) {\n    return true\n  }\n  return false\n}\nexport function greaterOrEqual(date: Date, o: Date): boolean {\n  if (equal(date, o) || greaterThen(date, o)) {\n    return true\n  }\n  return false\n}\nexport function countSeconds(str: string | Array<string | number>): number {\n  if (Array.isArray(str)) {\n    let s = 0\n    for (const item of str) {\n      if (typeof item === 'string') {\n        s += countSeconds(item)\n      } else {\n        s += item\n      }\n    }\n    return s\n  } else {\n    const intervals = str.split(':').map(item => parseInt(item))\n    const seconds = intervals[0] * 3600 + intervals[1] * 60 + intervals[2]\n    return seconds\n  }\n}\nexport function reformate(f: number | string): string {\n  if (f >= 0 && f <= 9) {\n    return '0' + f\n  }\n  return f.toString()\n}\nexport function today(): string {\n  const NOW = new Date()\n  return formateDate(NOW)\n}\nexport function formateDate(NOW: Date): string {\n  return `${reformate(NOW.getDate())}/${reformate(NOW.getMonth() + 1)}/${NOW.getFullYear()}`\n}\nexport function formateTime(seconds: number): string {\n  const HH = Math.floor(seconds / 3600)\n  const MM = Math.floor((seconds - HH * 3600) / 60)\n  const SS = seconds - HH * 3600 - MM * 60\n  const time: string = reformate(HH) + ':' + reformate(MM) + ':' + reformate(SS)\n  return time\n}\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thurday', 'Friday', 'Saturday']\nexport const RANGE = ['First', 'Seconde', 'Third', 'Fourth']\n","import * as React from 'react'\nimport { Job } from '../interfaces'\nimport { DateFr, greaterOrEqual, today, countSeconds, formateTime } from '../utility'\n\ninterface state {\n  name: string\n  time: string\n  expectedDate: string\n  note: string\n  group: string\n  daily: boolean\n  option: boolean\n  id: number\n}\n\ninterface props {\n  groups: Array<string>\n  addElement: (item: Job) => void\n  item?: Job\n  modify?: boolean\n}\n\nexport default class TodoAdd extends React.Component<props, state> {\n  private addElement: (item: Job) => void\n  private showGroupProposals: boolean\n  private groups: Array<string>\n  private warnings: boolean\n  private successful: boolean\n\n  constructor(props: props) {\n    super(props)\n    if (this.props.item) {\n      const ITEM = this.props.item\n      this.state = {\n        name: ITEM.name,\n        time: ITEM.timeBegin,\n        expectedDate: ITEM.expectedDate,\n        note: ITEM.note,\n        group: ITEM.group,\n        daily: ITEM.daily,\n        option: false,\n        id: ITEM.id,\n      }\n    } else {\n      this.state = {\n        name: '',\n        time: '',\n        expectedDate: '',\n        note: '',\n        group: '',\n        daily: false,\n        option: false,\n        id: 0,\n      }\n    }\n    this.warnings = false\n    this.successful = false\n    this.addElement = this.props.addElement\n    this.showGroupProposals = false\n    this.add = this.add.bind(this)\n    this.groups = []\n  }\n\n  add() {\n    const NOW = new Date()\n    const expectedDate = this.state.expectedDate\n    let status =\n      /^[0-5]?[0-9]:[0-5]?[0-9]$/.test(this.state.time) ||\n      /^[0-5]?[0-9]:[0-5]?[0-9]:[0-5]?[0-9]$/.test(this.state.time)\n    let date: boolean = /([0-2]?[0-9]|3[0-1])\\/(0?[0-9]|1[0-2])\\/2[0-9]{1,3}/.test(expectedDate)\n    const dateExpected = DateFr(expectedDate)\n    date = date && greaterOrEqual(dateExpected, NOW)\n    date = date || expectedDate === ''\n    status = status && date\n    if (status || this.state.daily) {\n      if (this.state.name !== '' && this.state.time !== '') {\n        let time = this.state.time\n        if (/^[0-5]?[0-9]:[0-5]?[0-9]$/.test(time)) {\n          time = '00:' + time\n        }\n        const expectedDate =\n          this.state.expectedDate === '' || this.state.daily ? today() : this.state.expectedDate\n        const group = this.state.group === '' ? 'unknown' : this.state.group\n        const note = this.state.note === '' ? '' : this.state.note\n        this.successful = true\n        const SEND = {\n          id: this.state.id,\n          name: this.state.name,\n          timeBegin: time,\n          timeLeft: time,\n          isAchieved: false,\n          expectedDate,\n          group,\n          note,\n          finishedDay: '',\n          daily: this.state.daily,\n        }\n        if (this.props.modify && this.props.item !== undefined) {\n          const BEGINSECONDS = countSeconds(this.props.item.timeBegin)\n          const LEFTSECONDS = countSeconds(this.props.item.timeLeft)\n          const DIFFERENCE = BEGINSECONDS - LEFTSECONDS\n          const WANTEDBEGIN = countSeconds(SEND.timeBegin)\n          const WANTEDLEFT = WANTEDBEGIN - DIFFERENCE > 0 ? WANTEDBEGIN - DIFFERENCE : 0\n          SEND.timeLeft = formateTime(WANTEDLEFT)\n        }\n        this.addElement(SEND)\n        this.setState({\n          name: '',\n          time: '',\n          expectedDate: '',\n          note: '',\n          group: '',\n          option: false,\n        })\n      } else {\n        this.setState({ option: !this.state.option })\n        this.warnings = true\n      }\n    } else {\n      this.setState({ option: !this.state.option })\n      this.warnings = true\n    }\n  }\n\n  render() {\n    this.groups = this.props.groups || []\n    return (\n      <div className=\"col col-md-8 mx-auto my-5 bg-light border border-light rounded p-2\">\n        {this.warnings && (\n          <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n            <strong>Error!</strong> You should check in on some of those fields below.\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={() => {\n                this.warnings = false\n                this.setState({ option: !this.state.option })\n              }}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        )}\n        {this.successful && (\n          <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            <strong>Successful!</strong> {this.props.modify ? 'Modification' : 'Task Added.'}\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={() => {\n                this.successful = false\n                this.setState({ option: !this.state.option })\n              }}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        )}\n        <div className={'form-row add-section ' + (this.state.option ? 'extend' : '')}>\n          <div className=\"col-12 col-md-5 mx-md-1 form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"write your job...\"\n              value={this.state.name}\n              onChange={e => {\n                const name = e.currentTarget.value\n                this.setState({ name })\n              }}\n            />\n          </div>\n          <div className=\"col-12 col-md-5 mx-md-1 form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"HH:MM:SS\"\n              value={this.state.time}\n              onChange={e => {\n                const time = e.currentTarget.value\n                this.setState({\n                  time,\n                })\n              }}\n            />\n          </div>\n          <button className=\"h-50 btn btn-secondary mx-auto\" onClick={this.add}>\n            {this.props.modify ? 'Modify' : 'Add'}\n          </button>\n        </div>\n        <fieldset className=\"form-row px-5\">\n          <legend>Optional</legend>\n          <div className={'col hide ' + (this.state.option ? 'not-hide' : '')}>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Date</span>\n              </div>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={this.state.expectedDate}\n                placeholder=\"Type expected date that want to execute the tache DD/MM/YY\"\n                readOnly={this.state.daily}\n                onChange={e => {\n                  this.setState({ expectedDate: e.currentTarget.value })\n                }}\n              />\n            </div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Group</span>\n              </div>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={this.state.group}\n                placeholder=\"Type group associated here...\"\n                onChange={e => {\n                  this.setState({ group: e.currentTarget.value })\n                }}\n                onInput={e => {\n                  this.showGroupProposals = true\n                }}\n              />\n            </div>\n            {this.showGroupProposals &&\n              this.state.group !== '' &&\n              this.groups.filter(el => el.indexOf(this.state.group) !== -1).length !== 0 && (\n                <div className=\"form-group overflow-auto overflow-x-hidden bg-dark\">\n                  {this.groups\n                    .filter(item => item.indexOf(this.state.group) !== -1)\n                    .map((item, i) => (\n                      <div\n                        key={i}\n                        className=\"col-12 p-2 text-info stretched-link\"\n                        onClick={e => {\n                          this.showGroupProposals = false\n                          this.setState({ group: item })\n                        }}>\n                        {item}\n                      </div>\n                    ))}\n                </div>\n              )}\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={e => {\n                      this.setState({ daily: e.currentTarget.checked })\n                    }}\n                    checked={this.state.daily}\n                  />\n                </div>\n              </div>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                aria-label=\"Text input with checkbox\"\n                value=\"Daily\"\n                readOnly\n              />\n            </div>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Note</span>\n              </div>\n              <textarea\n                className=\"form-control\"\n                value={this.state.note}\n                placeholder=\"Type the note here...\"\n                onChange={e => {\n                  this.setState({ note: e.currentTarget.value })\n                }}></textarea>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport { Job } from '../interfaces'\nimport { Link } from 'react-router-dom'\nimport { greaterOrEqual, DateFr } from '../utility'\n\ninterface props {\n  item: Job\n  controllers: boolean\n  start?: (id: number) => void\n  remove?: (id: number) => void\n}\n\nconst Item: React.FC<props> = (param: props) => {\n  const LATE = !greaterOrEqual(\n    DateFr(param.item.expectedDate),\n    param.item.isAchieved ? DateFr(param.item.finishedDay) : new Date()\n  )\n  return (\n    <div className={'row border border-white rounded p-4 ' + (!LATE ? 'bg-light' : 'bg-warning')}>\n      <div className=\"col-10\">\n        <h3 className=\"text-dark font-weight-bold\">{param.item.name.toLocaleUpperCase()}</h3>\n      </div>\n      {LATE && (\n        <div className=\"col-2 font-weight-bold text-center \">\n          <i className=\"fas fa-clock px-1 py-0\"></i> LATE\n        </div>\n      )}\n      {param.item.daily && (\n        <div className=\"col-2 font-weight-bold text-center text-warning \">\n          <i className=\"fas fa-star px-1 py-0\"></i> DAILY\n        </div>\n      )}\n      <div className=\"col-12 col-sm-10 mx-auto row\">\n        <div className=\"col-12 col-sm-4 p-2 text-center\">\n          <h6 className=\"text-dark font-weight-bold\">Initiale Time:</h6>{' '}\n          <strong className=\"text-info\">{param.item.timeBegin}</strong>\n        </div>\n        <div className=\"col-12 col-sm-4 p-2 text-center\">\n          <h6 className=\"text-dark font-weight-bold\">Time Left:</h6>{' '}\n          <strong className=\"text-info\">{param.item.timeLeft}</strong>\n        </div>\n        <div className=\"col-12 col-sm-4 p-2 text-center\">\n          <h6 className=\"text-dark font-weight-bold\">Expected Date:</h6>{' '}\n          <strong className=\"text-danger\">{param.item.expectedDate}</strong>\n        </div>\n      </div>\n      {param.controllers && (\n        <div className=\"col-12 row justify-content-end text-center p-2\">\n          <button\n            className=\"btn btn-success m-2\"\n            onClick={e => param.start && param.start(param.item.id)}>\n            <i className=\"fas fa-play m-1\"></i> Start\n          </button>\n          <button\n            className=\"btn btn-danger m-2 \"\n            onClick={e => param.remove && param.remove(param.item.id)}>\n            <i className=\"fas fa-trash m-1\"></i> Remove\n          </button>\n          <Link to={`modify/${param.item.id}`} className=\"btn btn-secondary m-2\">\n            <i className=\"fas fa-sliders-h m-1\"></i> Modify\n          </Link>\n          <Link to={`note/${param.item.id}`} className=\"btn btn-info m-2\">\n            <i className=\"fas fa-sticky-note m-1\"></i> Note\n          </Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Item\n","import * as React from 'react'\nimport * as d3 from 'd3'\nimport { Work } from '../interfaces'\nimport { reformate, days, today, DateFr } from '../utility'\n\ninterface props {\n  working: Map<string, Map<number, Work>>\n}\ninterface state {\n  selection: d3.Selection<SVGSVGElement | null, unknown, null, undefined> | null\n  selectedDay: string\n}\n\nclass TodayReport extends React.Component<props, state> {\n  private ref: React.RefObject<SVGSVGElement>\n  private working: Map<string, Map<number, Work>>\n  private dataPlot: Array<Work>\n  private width: number\n  private height: number\n  private data: Map<number, Work> | null\n  private selection: d3.Selection<SVGSVGElement | null, unknown, null, undefined> | null\n  private update: number\n\n  constructor(props: props) {\n    super(props)\n    this.state = {\n      selectedDay: today(),\n      selection: null,\n    }\n    this.ref = React.createRef<SVGSVGElement>()\n    this.working = this.props.working\n    this.dataPlot = new Array<Work>()\n    this.width = 330\n    this.height = 250\n    this.data = null\n    this.update = 1\n    this.selection = null\n  }\n\n  shouldComponentUpdate(nextProps: props, nextState: state) {\n    if (nextState !== this.state) {\n      return true\n    } else if (this.update % 120 === 0) {\n      this.update = 1\n      return true\n    } else {\n      this.update++\n      return false\n    }\n  }\n\n  _draw() {\n    let max = 0\n    const height = this.height\n    const width = this.width\n    this.dataPlot = []\n    if (this.data) {\n      // IF WE HAVE THE REQUIRED DATA\n      this.data.forEach((value: Work, key: number) => {\n        // TRANSFORM MAP TO SIMPLE ARRAY\n        this.dataPlot.push(value)\n        if (value.time > max) {\n          max = value.time\n        }\n      })\n      // CREATE SCALE FUNCTION\n      const y = d3\n        .scaleLinear()\n        .domain([0, max + 200])\n        .range([0, height])\n      // SVG SELECTOR\n      const SELECTION = this.state.selection\n      SELECTION && SELECTION.html('')\n      if (!SELECTION) {\n        this.setState({ selection: d3.select(this.ref.current) })\n      } else {\n        // USABLE WIDTH\n        const widthUsedDraw = width - 10\n\n        // DRAW GRAPHIC\n        const GRAPHIC = SELECTION.append('g')\n        GRAPHIC.selectAll('rect')\n          .data(this.dataPlot)\n          .enter()\n          .append('rect')\n          .attr('width', 6)\n          .attr('rx', 2)\n          .attr('ry', 2)\n          .attr('x', (_: Work, i: number) => _.hour * (widthUsedDraw / 24) + 2)\n          .attr('height', (d: Work) => y(d.time))\n          .attr('y', (d: Work) => height - 20 - y(d.time))\n\n          .attr('fill', (_: Work, i: number) =>\n            i === 0 ? '#007bff' : this.dataPlot[i - 1].time > _.time ? 'red' : 'green'\n          )\n          .on('mouseover', (d: Work, i: number) => {\n            const CONSTWIDTH = (d.hour * widthUsedDraw) / 24\n            const CONSTHEIGHT = height - 60 - y(d.time)\n            const TEXTPOSITIONX =\n              CONSTWIDTH < 45 ? 45 : CONSTWIDTH > this.width - 45 ? this.width - 45 : CONSTWIDTH\n            const TEXTPOSITIONY = CONSTHEIGHT - 10 > 0 ? CONSTHEIGHT - 10 : 10\n            const RECTPOSITIONX =\n              CONSTWIDTH - 45 < 0\n                ? 0\n                : CONSTWIDTH - 45 > this.width - 90\n                ? this.width - 90\n                : CONSTWIDTH - 45\n            const RECTPOSITIONY = CONSTHEIGHT - 20 > 0 ? CONSTHEIGHT - 20 : 0\n            SHOWDETAILTS.text(\n              `${d.time / 60 > 2 ? (d.time / 60).toFixed(0) + ' MINUTES' : d.time + ' SECONDS'}`\n            )\n              .attr('x', TEXTPOSITIONX)\n              .attr('y', TEXTPOSITIONY + 10)\n\n            RECTSHOWDETAILS.attr('x', RECTPOSITIONX)\n              .attr('y', RECTPOSITIONY)\n              .attr(\n                'fill',\n                i === 0 ? '#007bff' : this.dataPlot[i - 1].time > d.time ? 'red' : 'green'\n              )\n            DETAILS.attr('display', 'block')\n          })\n          .on('mouseout', () => {\n            DETAILS.attr('display', 'none')\n          })\n\n        // SHOW DETAILS ELEMENT\n        const DETAILS = SELECTION.append('g')\n          .attr('display', 'none')\n          .on('mouseover', function () {\n            this.setAttribute('display', 'block')\n          })\n          .on('mouseout', function () {\n            this.setAttribute('display', 'none')\n          })\n\n        const RECTSHOWDETAILS = DETAILS.append('rect')\n          .attr('width', 90)\n          .attr('height', 40)\n          .attr('fill', '#007bff')\n          .attr('rx', 5)\n          .attr('rx', 5)\n\n        const SHOWDETAILTS = DETAILS.append('text')\n          .attr('width', 90)\n          .attr('height', 20)\n          .attr('font-size', 12)\n          .style('text-anchor', 'middle')\n\n        // DRAW THE AXES\n        const AXES = SELECTION.append('g')\n        AXES.selectAll('text')\n          .data(new Array(25).fill(0))\n          .enter()\n          .append('text')\n          .attr('x', (_: number, i: number) =>\n            i < 24 ? i * (widthUsedDraw / 24) + 3 : i * (widthUsedDraw / 24) - 22\n          )\n          .attr('y', height)\n          .attr('fill', 'blue')\n          .style('font-size', '16')\n          .style('font-family', 'm')\n          .text((_: number, i: number) => (i % 6 === 0 ? (i < 24 ? i : i + '(h)') : ''))\n        AXES.selectAll('circle')\n          .data(new Array(24 * 4 + 1).fill(0))\n          .enter()\n          .append('circle')\n          .attr('cx', (_: number, i) => i * (widthUsedDraw / (24 * 4)) + 5)\n          .attr('cy', height - 20)\n          .attr('r', (_: number, i: number) => (i % 24 === 0 ? 3 : 1))\n          .attr('stroke', '#2228')\n          .attr('stroke-width', '1')\n          .selectAll('rect')\n      }\n    }\n  }\n\n  componentDidMount() {\n    this._draw()\n  }\n\n  componentDidUpdate() {\n    this._draw()\n  }\n\n  render() {\n    this.data = this.working.get(this.state.selectedDay) as Map<number, Work>\n    const Nav: React.FC<{}> = () => (\n      <div className=\"row\">\n        <div className=\"col-12 input-group my-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">\n              Date\n            </label>\n          </div>\n          <select\n            className=\"custom-select\"\n            onChange={e => {\n              this.setState({ selectedDay: e.currentTarget.value })\n            }}\n            defaultValue={this.state.selectedDay}>\n            {new Array(8).fill(0).map((_: number, i: number) => {\n              const LASTDATE = new Date().getDate() - i\n              const DATE = new Date(new Date().setDate(LASTDATE))\n              const REFORMATEDDATE = `${reformate(DATE.getDate())}/${reformate(\n                DATE.getMonth() + 1\n              )}/${DATE.getFullYear()}`\n              const DAY = days[DATE.getDay()]\n              return (\n                <option key={i} value={REFORMATEDDATE}>\n                  {DAY}\n                </option>\n              )\n            })}\n          </select>\n        </div>\n      </div>\n    )\n    const INDEX = DateFr(this.state.selectedDay).getDay()\n    return (\n      <div className=\"col-12 col-md-6\">\n        <div className=\"row\">\n          <h4 className=\"text-info p-2 pl-3 col-12\">Days Reporter ({days[INDEX]})</h4>\n          <svg\n            className=\"col-12\"\n            ref={this.ref}\n            style={{ display: this.data ? 'block' : 'none' }}\n            viewBox={`0 0 ${this.width} ${this.height}`}></svg>\n          {!this.data && (\n            <h4\n              className=\"text-center col-12 d-flex justify-content-center align-items-center text-danger\"\n              style={{ height: this.height }}>\n              No data\n            </h4>\n          )}\n          <div className=\"col-12\">\n            <Nav />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default TodayReport\n","import * as React from 'react'\nimport * as d3 from 'd3'\nimport { Job, Work } from '../interfaces'\nimport {\n  days,\n  reformate,\n  countSeconds,\n  RANGE,\n  formateDate,\n  greaterOrEqual,\n  DateFr,\n} from '../utility'\n\ninterface state {\n  selection: d3.Selection<SVGSVGElement | null, unknown, null, undefined> | null\n  selectedWeek: number\n}\n\ninterface props {\n  jobs: Array<Job>\n}\n\ninterface plotData {\n  date: string\n  seconds: number\n  tasksNumber: number\n}\n\nclass HoursPerDay extends React.Component<props, state> {\n  private ref: React.RefObject<SVGSVGElement>\n  private working: Array<Job>\n  private dataPlot: Array<plotData>\n  private width: number\n  private height: number\n  private selection: d3.Selection<SVGSVGElement | null, unknown, null, undefined> | null\n  private update: number\n\n  constructor(props: props) {\n    super(props)\n    this.state = {\n      selectedWeek: 0,\n      selection: null,\n    }\n    this.ref = React.createRef<SVGSVGElement>()\n    this.working = this.props.jobs\n    this.dataPlot = new Array<plotData>()\n    for (const item of this.working) {\n      const index = this.dataPlot.findIndex(v => v.date === item.finishedDay)\n      if (index === -1) {\n        this.dataPlot.push({\n          date: item.finishedDay,\n          seconds: countSeconds(item.timeBegin),\n          tasksNumber: 1,\n        })\n      } else {\n        this.dataPlot[index].seconds += countSeconds(item.timeBegin)\n        this.dataPlot[index].tasksNumber++\n      }\n    }\n    this.width = 330\n    this.height = 250\n    this.update = 1\n    this.selection = null\n  }\n\n  shouldComponentUpdate(nextProps: props, nextState: state) {\n    if (nextState !== this.state) {\n      return true\n    } else if (this.update % 120 === 0) {\n      this.update = 1\n      return true\n    } else {\n      this.update++\n      return false\n    }\n  }\n\n  _draw() {\n    const height = this.height\n    const width = this.width\n    const widthUsedDraw = width - 10\n    const HEIGHTUSEDDRAW = height - 20\n    const max = d3.max(this.dataPlot, v => {\n      const lastDate = new Date().getDate() - 7\n      const date = new Date(new Date().setDate(lastDate))\n      if (greaterOrEqual(DateFr(v.date), date)) {\n        return v.seconds\n      } else {\n        return 0\n      }\n    }) as number\n    const SELECTION = this.state.selection\n    // Y SCALE\n    const y = d3\n      .scaleLinear()\n      .domain([0, max + 100])\n      .range([0, HEIGHTUSEDDRAW])\n\n    if (!SELECTION) {\n      this.setState({ selection: d3.select(this.ref.current) })\n    } else {\n      console.log('max ', max)\n      SELECTION.html('')\n\n      // AXES\n      const axes = SELECTION.append('g')\n      axes\n        .selectAll('text')\n        .data(new Array(8).fill(0))\n        .enter()\n        .append('text')\n        .attr('x', (_: number, i: number) =>\n          i < 7 ? i * (widthUsedDraw / 7) + 3 : i * (widthUsedDraw / 7) - 15\n        )\n        .attr('y', height)\n        .attr('fill', 'blue')\n        .style('font-size', '16')\n        .style('font-family', 'm')\n        .text((_: number, i: number) => {\n          const date = new Date(new Date().setDate(new Date().getDate() - 7 + i))\n          return days[date.getDay()].substr(0, 3)\n        })\n      axes\n        .selectAll('circle')\n        .data(new Array(7 * 15 + 1).fill(0))\n        .enter()\n        .append('circle')\n        .attr('stroke', '#2228')\n        .attr('stroke-width', '0')\n        .attr('cx', (_: number, i: number) => i * (widthUsedDraw / (7 * 15)) + 5)\n        .attr('cy', height - 20)\n        .attr('r', (_: number, i: number) => (i % 15 === 0 ? 3 : 1))\n\n      // PLOT\n      const linesGroup = SELECTION.append('g')\n      linesGroup\n        .selectAll('circle')\n        .data(new Array(8).fill(0))\n        .enter()\n        .append('circle')\n        .attr('r', 4)\n        .attr('fill', 'green')\n        .attr('stroke', 'white')\n        .attr('stroke-width', 2)\n        .attr('cx', (_: number, i: number) => i * (widthUsedDraw / 7) + 5)\n        .attr('cy', (_: number, i: number) => {\n          const lastDate = new Date().getDate() - 7 * (this.state.selectedWeek + 1) + i\n          const date = new Date(new Date().setDate(lastDate))\n          const reformatedDate = formateDate(date)\n          const index = this.dataPlot.findIndex((v: plotData) => v.date === reformatedDate)\n          if (index !== -1) {\n            console.log(this.dataPlot[index].seconds, y(this.dataPlot[index].seconds))\n            return HEIGHTUSEDDRAW - y(this.dataPlot[index].seconds)\n          } else {\n            return HEIGHTUSEDDRAW\n          }\n        })\n        .on('mouseover', (d: number, i: number) => {\n          const lastDate = new Date().getDate() - 7 * (this.state.selectedWeek + 1) + i\n          const date = new Date(new Date().setDate(lastDate))\n          const reformatedDate = formateDate(date)\n          const index = this.dataPlot.findIndex((v: plotData) => v.date === reformatedDate)\n          const ITEM = this.dataPlot[index] || { seconds: 0 }\n          //\n          const CONSTWIDTH = (i * widthUsedDraw) / 7\n          const CONSTHEIGHT = height - 60 - y(ITEM.seconds)\n          const TEXTPOSITIONX =\n            CONSTWIDTH < 45 ? 45 : CONSTWIDTH > this.width - 45 ? this.width - 45 : CONSTWIDTH\n          const TEXTPOSITIONY = CONSTHEIGHT - 10 > 0 ? CONSTHEIGHT - 10 : 10\n          const RECTPOSITIONX =\n            CONSTWIDTH - 45 < 0\n              ? 0\n              : CONSTWIDTH - 45 > this.width - 90\n              ? this.width - 90\n              : CONSTWIDTH - 45\n          const RECTPOSITIONY = CONSTHEIGHT - 20 > 0 ? CONSTHEIGHT - 20 : 0\n          SHOWDETAILTS.text(\n            `${\n              ITEM.seconds / 60 > 2\n                ? (ITEM.seconds / 60).toFixed(0) + ' MINUTES'\n                : ITEM.seconds + ' SECONDS'\n            }`\n          )\n            .attr('x', TEXTPOSITIONX)\n            .attr('y', TEXTPOSITIONY + 10)\n\n          RECTSHOWDETAILS.attr('x', RECTPOSITIONX).attr('y', RECTPOSITIONY).attr(\n            'fill',\n\n            '#007bff'\n          )\n          DETAILS.attr('display', 'block')\n        })\n        .on('mouseout', () => {\n          DETAILS.attr('display', 'none')\n        })\n      // FILL\n      linesGroup\n        .selectAll('line')\n        .data(new Array(7).fill(0))\n        .enter()\n        .append('line')\n        .attr('stroke', 'green')\n        .attr('x1', (_: number, i: number) => i * (widthUsedDraw / 7) + 5)\n        .attr('x2', (_: number, i: number) => (i + 1) * (widthUsedDraw / 7) + 5)\n        .attr('y1', (_: number, i: number) => {\n          const lastDate = new Date().getDate() - 7 * (this.state.selectedWeek + 1) + i\n          const date = new Date(new Date().setDate(lastDate))\n          const reformatedDate = formateDate(date)\n          const index = this.dataPlot.findIndex((v: plotData) => v.date === reformatedDate)\n          if (index !== -1) {\n            return HEIGHTUSEDDRAW - y(this.dataPlot[index].seconds)\n          } else {\n            return HEIGHTUSEDDRAW\n          }\n        })\n        .attr('y2', (_: number, i: number) => {\n          const lastDate = new Date().getDate() - 7 * (this.state.selectedWeek + 1) + (i + 1)\n          const date = new Date(new Date().setDate(lastDate))\n          const reformatedDate = formateDate(date)\n          const index = this.dataPlot.findIndex((v: plotData) => v.date === reformatedDate)\n          if (index !== -1) {\n            return HEIGHTUSEDDRAW - y(this.dataPlot[index].seconds)\n          } else {\n            return HEIGHTUSEDDRAW\n          }\n        })\n\n      // SHOW DETAILS ELEMENT\n      const DETAILS = SELECTION.append('g')\n        .attr('display', 'none')\n        .on('mouseover', function () {\n          this.setAttribute('display', 'block')\n        })\n        .on('mouseout', function () {\n          this.setAttribute('display', 'none')\n        })\n\n      const RECTSHOWDETAILS = DETAILS.append('rect')\n        .attr('width', 90)\n        .attr('height', 40)\n        .attr('fill', '#007bff')\n        .attr('rx', 5)\n        .attr('rx', 5)\n\n      const SHOWDETAILTS = DETAILS.append('text')\n        .attr('width', 90)\n        .attr('height', 20)\n        .attr('font-size', 12)\n        .style('text-anchor', 'middle')\n    }\n  }\n\n  componentDidMount() {\n    this._draw()\n  }\n\n  componentDidUpdate() {\n    this._draw()\n  }\n\n  render() {\n    const Nav: React.FC<{}> = () => (\n      <div className=\"row\">\n        <div className=\"col-12 input-group my-3\">\n          <div className=\"input-group-prepend\">\n            <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">\n              Week\n            </label>\n          </div>\n          <select\n            className=\"custom-select\"\n            onChange={e => {\n              this.setState({ selectedWeek: parseInt(e.currentTarget.value) })\n            }}\n            defaultValue={this.state.selectedWeek}>\n            {new Array(4).fill(0).map((_: number, i: number) => {\n              return (\n                <option key={i} value={i}>\n                  {RANGE[i]} Week\n                </option>\n              )\n            })}\n          </select>\n        </div>\n      </div>\n    )\n    return (\n      <div className=\"col-12 col-md-6\">\n        <div className=\"row\">\n          <h4 className=\"text-info p-2 pl-3 col-12\">\n            Weeks Reporter ({RANGE[this.state.selectedWeek]} Week)\n          </h4>\n          <svg className=\"col-12\" ref={this.ref} viewBox={`0 0 ${this.width} ${this.height}`}></svg>\n          <div className=\"col-12\">\n            <Nav />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default HoursPerDay\n","import * as React from 'react'\nimport { Work, Job } from '../interfaces'\nimport TodayReport from './TodayReport'\nimport HoursPerDay from './HoursPerDay'\n\ninterface props {\n  working: Map<string, Map<number, Work>>\n  jobs: Array<Job>\n}\n\nconst Svg: React.FC<props> = (param: props) => {\n  const working = param.working\n  return (\n    <div className=\"row bg-light p-4 my-2\">\n      <TodayReport working={working} />\n      <HoursPerDay jobs={param.jobs} />\n    </div>\n  )\n}\nexport default Svg\n","import * as React from 'react'\nimport { Job, Work } from '../interfaces'\nimport Item from './Item'\nimport { greaterOrEqual, DateFr, greaterThen, equal } from '../utility'\nimport { Switch, Route, Link } from 'react-router-dom'\nimport * as d3 from 'd3'\nimport Svg from './Svg'\n\nfunction countHour(os: Array<string>): string {\n  let s = 0\n  for (const o of os) {\n    const l = o.split(':').map(item => parseInt(item))\n    s += l[0] * 3600 + l[1] * 60 + l[2]\n  }\n  const HH = Math.floor(s / 3600)\n  const MM = Math.floor((s - HH * 3600) / 60)\n  const SS = s - HH * 3600 - MM * 60\n  const time = reformate(HH) + ':' + reformate(MM) + ':' + reformate(SS)\n  return time\n}\n\nfunction reformate(f: number | string): string {\n  if (f >= 0 && f <= 9) {\n    return '0' + f\n  }\n  return f.toString()\n}\n\ninterface Props {\n  index: number\n  myList: Array<Job>\n  working: Map<string, Map<number, Work>>\n  startWork: (id: number) => void\n  removeWork: (id: number) => void\n}\n\ninterface State {\n  staticOngle: string\n}\n\nexport default class TodoAddList extends React.Component<Props, State> {\n  private startWork: (id: number) => void\n  private removeWork: (id: number) => void\n  private myList: Array<Job>\n  private hist: Array<Job>\n  private working: Map<string, Map<number, Work>>\n\n  constructor(props: Props) {\n    super(props)\n    this.state = { staticOngle: 'date' }\n    this.startWork = this.props.startWork\n    this.removeWork = this.props.removeWork\n    this.myList = []\n    this.hist = []\n    this.working = new Map()\n  }\n\n  _list() {\n    return (\n      <div className=\"todo-list\">\n        {this.myList.map((item, i) => {\n          if (!item.isAchieved && this.props.index !== item.id) {\n            return (\n              <Item\n                item={item}\n                key={i}\n                start={this.startWork}\n                controllers={true}\n                remove={this.removeWork}\n              />\n            )\n          } else {\n            return ''\n          }\n        })}\n      </div>\n    )\n  }\n\n  _hist() {\n    this.hist = this.myList\n      .filter(item => item.isAchieved)\n      .sort((a, b) => {\n        if (greaterOrEqual(DateFr(a.finishedDay), DateFr(b.finishedDay))) {\n          return -1\n        } else {\n          return 1\n        }\n      })\n    let finishedDay = this.hist.length !== 0 ? this.hist[0].finishedDay : ''\n    return this.hist.map((item, index) => {\n      const showDate = index === 0 || item.finishedDay !== finishedDay\n      finishedDay = showDate ? item.finishedDay : finishedDay\n      if (showDate) {\n        return (\n          <div className=\"row mt-3\" key={index}>\n            <h3 className=\"col-12 col-md-8 text-dark py-2 px-3 pl-5 my-2 font-weight-bold\">\n              {finishedDay}\n            </h3>\n            <h3 className=\"col-12 col-md-4 py-0 d-flex justify-content-center align-items-center text-danger bg-dark rounded border border-light  my-2 numeric\">\n              TOTAL OF HOURS:{' '}\n              {countHour(\n                this.hist\n                  .filter(item => item.finishedDay === finishedDay)\n                  .map(item => item.timeBegin)\n              )}\n            </h3>\n            <div className=\"col-12\">\n              {this.hist\n                .filter(item => item.finishedDay === finishedDay)\n                .map((item, index) => (\n                  <Item key={index} controllers={false} item={item} />\n                ))}\n            </div>\n          </div>\n        )\n      } else {\n        return undefined\n      }\n    })\n  }\n\n  _static() {\n    this.hist = this.myList\n      .filter(item => item.isAchieved)\n      .sort((a, b) => {\n        if (greaterThen(DateFr(a.finishedDay), DateFr(b.finishedDay))) {\n          return -1\n        } else if (equal(DateFr(a.finishedDay), DateFr(b.finishedDay))) {\n          return 0\n        } else {\n          return 1\n        }\n      })\n    if (this.state.staticOngle === 'group') {\n      this.hist = this.hist.sort((a, b) => {\n        if (a.group > b.group) {\n          return 1\n        } else if (a.group < b.group) {\n          return -1\n        } else {\n          return 0\n        }\n      })\n    }\n\n    let finishedDay = this.hist.length !== 0 ? this.hist[0].finishedDay : ''\n    let group = this.hist.length !== 0 ? this.hist[0].group : ''\n    if (this.state.staticOngle === 'date') {\n      return (\n        <div>\n          {this.hist.map((item, index) => {\n            const showDate = index === 0 || item.finishedDay !== finishedDay\n            finishedDay = showDate ? item.finishedDay : finishedDay\n            if (showDate) {\n              return (\n                <div className=\"row mt-3\" key={index}>\n                  <h3 className=\"col-12 col-md-8 text-dark py-2 px-3 pl-5 my-2 font-weight-bold\">\n                    {finishedDay}\n                  </h3>\n                  <h3 className=\"col-12 col-md-4 py-0 d-flex justify-content-center align-items-center text-danger bg-dark rounded border border-light  my-2 numeric\">\n                    TOTAL OF HOURS:{' '}\n                    {countHour(\n                      this.hist\n                        .filter(item => item.finishedDay === finishedDay)\n                        .map(item => item.timeBegin)\n                    )}\n                  </h3>\n                  <div className=\"col-12\">\n                    {this.hist\n                      .filter(item => item.finishedDay === finishedDay)\n                      .map((item, index) => (\n                        <Item key={index} controllers={false} item={item} />\n                      ))}\n                  </div>\n                </div>\n              )\n            } else {\n              return undefined\n            }\n          })}\n        </div>\n      )\n    } else if (this.state.staticOngle === 'group') {\n      return this.hist.map((item, index) => {\n        const showGroup = index === 0 || item.group !== group\n        group = showGroup ? item.group : group\n        if (showGroup) {\n          return (\n            <div className=\"row mt-3\" key={index}>\n              <h3 className=\"col-12 col-md-8 text-dark py-2 px-3 pl-5 my-2 font-weight-bold\">\n                {group}\n              </h3>\n              <h3 className=\"col-12 col-md-4 py-0 d-flex justify-content-center align-items-center text-danger bg-dark rounded border border-light  my-2 numeric\">\n                TOTAL OF HOURS:{' '}\n                {countHour(\n                  this.hist.filter(item => item.group === group).map(item => item.timeBegin)\n                )}\n              </h3>\n              <div className=\"col-12\">\n                {this.hist\n                  .filter(item => item.group === group)\n                  .map((item, index) => (\n                    <Item key={index} controllers={false} item={item} />\n                  ))}\n              </div>\n            </div>\n          )\n        } else {\n          return undefined\n        }\n      })\n    }\n  }\n\n  render() {\n    this.myList = this.props.myList\n    this.working = this.props.working\n    return (\n      <div className=\"row mt-4\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <h1 className=\"col-10 text-primary\">Tasks</h1>\n            <Link to=\"add\" className=\"h-25 btn btn-primary mx-auto align-self-center\">\n              <i className=\"fas fa-plus mx-1\"></i> Add\n            </Link>\n            <div className=\"limitor col-12\">\n              <div className=\"row\">\n                <div className=\"col-12\">{this._list()}</div>\n              </div>\n            </div>\n          </Route>\n          <Route path=\"/history\">\n            <h1 className=\"col-10 text-primary\">History</h1>\n            <div className=\"col-12\">{this._hist()}</div>\n          </Route>\n          <Route path=\"/statistics\">\n            <h1 className=\"col-12  col-md-8 text-primary\">Statistics</h1>\n            <div className=\"col-12 col-md-4 btn-group\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={e => this.setState({ staticOngle: 'date' })}>\n                By Date\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={e => this.setState({ staticOngle: 'group' })}>\n                By Group\n              </button>\n            </div>\n            <div className=\"col-12\">\n              <Svg working={this.working} jobs={this.myList} />\n            </div>\n            <div className=\"col-12\">{this._static()}</div>\n          </Route>\n        </Switch>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\ninterface Props {\n  name: string\n  time: string | React.ReactNode\n  currentTime: string\n  currentDate: string\n  button: boolean\n  controllers: boolean\n  playPauseEffect: boolean\n  pause?: () => void\n  reprise?: () => void\n  stop?: () => void\n  remove?: () => void\n  completed?: () => void\n}\n\nconst Show: React.FC<Props> = (param: Props) => (\n  <div className=\"row\">\n    <div\n      className=\"col-10 col-md-8 col-xl-6 mx-auto bg-dark p-0 mt-4 numeric\"\n      onClick={e => !param.controllers && param.completed && param.completed()}>\n      <h6 className=\"text-danger p-1 pl-3 numeric\">job name: {param.name}</h6>\n      <h1 className=\"text-danger text-center numeric clock\">{param.time}</h1>\n      <div className=\"row\">\n        <div className=\"col-12 d-flex justify-content-around mx-2\">\n          <h6 className=\"text-danger p-1 numeric\">Current Time: {param.currentTime}</h6>\n          <h6 className=\"text-danger p-1 numeric\">Current Date: {param.currentDate}</h6>\n        </div>\n      </div>\n      {param.controllers && (\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            {param.button && (\n              <button\n                className=\"col no-outline font-weight-bold btn btn-danger mx-0 rounded-0\"\n                onClick={e => param.playPauseEffect && param.pause && param.pause()}>\n                <i className=\"fas fa-pause mx-1\"></i> Pause\n              </button>\n            )}\n            {!param.button && (\n              <button\n                className=\"col no-outline font-weight-bold btn btn-danger mx-0 rounded-0\"\n                onClick={e => param.playPauseEffect && param.reprise && param.reprise()}>\n                <i className=\"fas fa-play mx-1\"></i> Start\n              </button>\n            )}\n            <button\n              className=\"col no-outline font-weight-bold btn btn-danger mx-0 rounded-0\"\n              onClick={e => param.stop && param.stop()}>\n              <i className=\"fas fa-stop mx-1\"></i> Stop\n            </button>\n            <button\n              className=\"col no-outline font-weight-bold btn btn-danger mx-0 rounded-0\"\n              onClick={e => param.remove && param.remove()}>\n              <i className=\"fas fa-trash mx-1\"></i> Stop and Remove\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  </div>\n)\n\nexport default Show\n","import * as React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Header: React.FC = () => (\n  <div className=\"container-fluid\">\n    <div className=\"row\">\n      <nav className=\"col navbar navbar-expand navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Todo List App\n        </Link>\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/history\" className=\"nav-link\">\n                History\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/statistics\" className=\"nav-link\">\n                Statistics\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/settings\" className=\"nav-link\">\n                Settings\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  </div>\n)\n\nexport default Header\n","import * as React from 'react'\nimport { Options } from '../interfaces'\ninterface state {\n  stay: number\n  leave: number\n  option: boolean\n}\n\ninterface props {\n  options: Options\n  updateOptions: (stay: number, leave: number) => void\n}\n\nexport default class Param extends React.Component<props, state> {\n  private updateOptions: (stay: number, leave: number) => void\n  private warnings: boolean\n  private successful: boolean\n\n  constructor(props: props) {\n    super(props)\n    this.state = {\n      leave: this.props.options.reposeTime / 60,\n      stay: this.props.options.workingTime / 60,\n      option: false,\n    }\n    this.warnings = false\n    this.successful = false\n    this.updateOptions = this.props.updateOptions\n  }\n\n  render() {\n    return (\n      <div className=\"col col-md-8 mx-auto my-5 bg-light border border-light rounded p-2\">\n        {this.warnings && (\n          <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n            <strong>Error!</strong> You should give valide value.\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={() => {\n                this.warnings = false\n                this.setState({ option: !this.state.option })\n              }}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        )}\n        {this.successful && (\n          <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n            <strong>Successful!</strong> settigns updated.\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={() => {\n                this.successful = false\n                this.setState({ option: !this.state.option })\n              }}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        )}\n        <div className=\"form-row add-section\">\n          <div className=\"col-12 input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Working Time</span>\n            </div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              onChange={e => {\n                const v = parseInt(e.currentTarget.value)\n                if (!isNaN(v) && v > 0 && v <= 90) {\n                  this.successful = true\n                  this.warnings = false\n                  this.props.updateOptions(v * 60, this.state.leave * 60)\n                  this.setState({ stay: v })\n                } else {\n                  this.successful = false\n                  this.warnings = true\n                  this.setState({ option: !this.state.option })\n                }\n              }}\n              value={this.state.stay}\n            />\n            <div className=\"input-group-append\">\n              <span className=\"input-group-text\">min (90min max)</span>\n            </div>\n          </div>\n          <div className=\"col-12 input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Break Time</span>\n            </div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              onChange={e => {\n                const v = parseInt(e.currentTarget.value)\n                if (!isNaN(v) && v > 0 && v <= 30) {\n                  this.warnings = false\n                  this.successful = true\n                  this.props.updateOptions(this.state.stay * 60, v * 60)\n                  this.setState({ leave: v })\n                } else {\n                  this.successful = false\n                  this.warnings = true\n                  this.setState({ option: !this.state.option })\n                }\n              }}\n              value={this.state.leave}\n            />\n            <div className=\"input-group-append\">\n              <span className=\"input-group-text\">min (30min max)</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport { Job } from '../interfaces'\n\ninterface props {\n  item: Job\n}\n\nconst Note: React.FC<props> = (param: props) => {\n  console.log(param)\n  return (\n    <div className={'col-12 border border-white rounded p-4 '}>\n      <div className=\"row\">\n        <h1 className=\"col-12 text-primary\">Note</h1>\n        <div className=\"col-12 jumbotron\">\n          <h1 className=\"display-4\">{param.item.name || ''}</h1>\n          <p className=\"lead\">{(param.item.note === '' ? 'Nothing' : param.item.note) || ''}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Note\n","import * as React from 'react'\nimport { render } from 'react-dom'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport TodoAdd from './Components/Adder'\nimport TodoAddList from './Components/ToDoList'\nimport Show from './Components/LCD'\nimport Header from './Components/Header'\nimport { Job, Work, Options } from './interfaces'\nimport Param from './Components/Param'\nimport Note from './Components/Note'\nimport './css/font-awesome.css'\nimport './css/bootstrap4.css'\nimport './css/style.scss'\nimport { today, reformate, countSeconds, formateTime, greaterOrEqual, DateFr } from './utility'\nconst alarm = require('./media/alarm.mp3')\nconst breakTimeSound = require('./media/break-time.mp3')\nconst ticToc = require('./media/ticToc.mp3')\n\ninterface Props {}\ninterface State {\n  alter: boolean\n}\n\nclass Container extends React.Component<Props, State> {\n  private index: number\n  private selected = false\n  private interval: NodeJS.Timeout\n  private beep: HTMLAudioElement = new Audio()\n  private ticToc: HTMLAudioElement = new Audio()\n  private breakTimeSound: HTMLAudioElement = new Audio()\n  private groups: Array<string> = new Array()\n  private myList: Array<Job> = new Array()\n  private daily: Array<Job> = new Array()\n  private working: Map<string, Map<number, Work>> = new Map<string, Map<number, Work>>()\n  private showContent: string | number | React.ReactNode\n  private counter: number\n  private options: Options\n  private stayWorking: number\n  private leaveWorking: number\n  private modifyIndex: number\n  private button: boolean\n  private playPauseEffect: boolean\n  private ticTocPlayingStatus: boolean\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      alter: false,\n    }\n    // SET ATTRIBUTES\n    this.interval = setTimeout(() => {}, 0)\n    this.index = -1\n    this.modifyIndex = -1\n    this.counter = 0\n    this.button = false\n    this.playPauseEffect = true\n    this.stayWorking = 0\n    this.showContent = '00:00:00'\n    this.beep.src = alarm\n    this.ticToc.src = ticToc\n    this.breakTimeSound.src = breakTimeSound\n    this.beep.loop = true\n    this.ticToc.loop = true\n    this.ticTocPlayingStatus = false\n    const list = JSON.parse(window.localStorage.getItem('todo-list') || '[]')\n    this.working = this._createMapFromObject(\n      JSON.parse(window.localStorage.getItem('working-data') || '{}'),\n      this._createMapFromObject\n    ) as Map<string, Map<number, Work>>\n\n    this.options = JSON.parse(\n      window.localStorage.getItem('options') ||\n        JSON.stringify({ workingTime: 1500, reposeTime: 300 })\n    )\n    this.leaveWorking = this.options.reposeTime\n    // CORRECT THE DATA FOUNDED IN PREVIOUS VERSION\n    for (const item of list) {\n      item.id = this.counter\n      this.counter++\n      if (item.finishedDay === undefined || item.finishedDay === 'unknow') {\n        item.finishedDay = 'Unknown'\n      }\n      if (item.group === undefined || item.group === 'unknow') {\n        item.group = 'Unknown'\n      }\n      if (item.isAchieved === undefined) {\n        if (item.timeLeft === '00:00:00') {\n          item.isAchieved = true\n        } else {\n          item.isAchieved = false\n        }\n      }\n      if (item.daily === undefined) {\n        item.daily = false\n        item.group = item.group.toLowerCase()\n      }\n      this.myList.push(item)\n    }\n    const dailys = this.myList.filter(item => item.daily)\n    for (const daily of dailys) {\n      let found = false\n      for (const item of this.daily) {\n        if (\n          item.name === daily.name &&\n          item.group === daily.group &&\n          item.timeBegin === daily.timeBegin &&\n          item.note === daily.note\n        ) {\n          found = true\n        }\n      }\n      if (!found) {\n        this.daily.push({ ...daily, timeLeft: daily.timeBegin })\n      }\n    }\n    // BIND\n    this.addElement = this.addElement.bind(this)\n    this.modify = this.modify.bind(this)\n    this.startWork = this.startWork.bind(this)\n    this.stopWork = this.stopWork.bind(this)\n    this.stopAlarm = this.stopAlarm.bind(this)\n    this.removeWork = this.removeWork.bind(this)\n    this.remove = this.remove.bind(this)\n    this.pause = this.pause.bind(this)\n    this.reprise = this.reprise.bind(this)\n    this.updateOptions = this.updateOptions.bind(this)\n    // ATTRIBUTES\n    this.myList.forEach(item => {\n      if (this.groups.indexOf(item.group) === -1) {\n        this.groups.push(item.group.toLowerCase())\n      }\n    })\n    // DAILY TASKS\n    const TODAY = today()\n    this.daily.forEach(item => {\n      // ADD DAILY TASKS\n      let found = false\n      for (const itemq of this.myList) {\n        if (\n          itemq.name === item.name &&\n          itemq.group === item.group &&\n          itemq.timeBegin === item.timeBegin &&\n          itemq.note === item.note &&\n          itemq.expectedDate === TODAY\n        ) {\n          found = true\n          break\n        }\n      }\n      if (!found) {\n        const newItem = Object.assign(item, { expectedDate: TODAY, id: this.counter++ })\n        this.myList.push(newItem)\n      }\n    })\n    // REMOVE DAILY TASKS WHO ARE LATE\n    this.myList = this.myList.filter(\n      item => !(!greaterOrEqual(DateFr(item.expectedDate), new Date()) && item.daily)\n    )\n  }\n\n  _createObjectFromMap(map: Map<string | number, any>, callback?: (v: any) => any): any {\n    const object: any = {}\n    map.forEach((value: any, key: string | number) => {\n      if (!callback) {\n        object[key] = value\n      } else {\n        object[key] = callback(value)\n      }\n    })\n    return object\n  }\n\n  _createMapFromObject(obj: any, callback?: (v: any) => any) {\n    const map: Map<string | number, any> = new Map<string | number, any>()\n    Object.keys(obj).forEach((e: string | number) => {\n      if (!callback) {\n        map.set(e, obj[e])\n      } else {\n        map.set(e, callback(obj[e]))\n      }\n    })\n    return map\n  }\n\n  addElement(item: Job): void {\n    let tabTemp = item.timeBegin.split(':')\n    tabTemp = tabTemp.map(e => reformate(parseInt(e)))\n    const timeBegin = tabTemp.join(':')\n    item.timeBegin = timeBegin\n    item.timeLeft = timeBegin\n    tabTemp = item.expectedDate.split('/')\n    item.expectedDate = tabTemp.map(e => reformate(parseInt(e))).join('/')\n    item.id = this.counter++\n    this.myList.push(item)\n    window.localStorage.setItem('todo-list', JSON.stringify(this.myList))\n    if (this.groups.indexOf(item.group) === -1) {\n      this.groups.push(item.group)\n    }\n    this.setState({ alter: !this.state.alter })\n  }\n\n  modify(item: Job): void {\n    const INDEX = this.myList.findIndex(source => source.id === item.id)\n    this.myList[INDEX] = item\n    window.localStorage.setItem('todo-list', JSON.stringify(this.myList))\n    if (this.groups.indexOf(item.group) === -1) {\n      this.groups.push(item.group)\n    }\n    this.setState({ alter: !this.state.alter })\n  }\n\n  _workingOn(realTime: number, item: Job) {\n    const time: string = formateTime(realTime)\n    this.myList[this.index].timeLeft = time\n    this.showContent = time\n    const NOW = new Date()\n    const TODAY = today()\n    // FOR STATTISTICS PURPUSE\n    const WORK: Map<number, Work> = this.working.has(TODAY)\n      ? (this.working.get(TODAY) as Map<number, Work>)\n      : new Map<number, Work>()\n    const currentHourWork: Work = WORK.has(NOW.getHours())\n      ? (WORK.get(NOW.getHours()) as Work)\n      : { hour: NOW.getHours(), time: 0, group: item.group }\n    currentHourWork.time++\n    WORK.set(NOW.getHours(), currentHourWork)\n    this.working.set(TODAY, WORK)\n    this.stayWorking++\n\n    if (realTime <= 10 && realTime >= 1 && !this.ticTocPlayingStatus) {\n      this.ticTocPlayingStatus = true\n      this.ticToc.play()\n    }\n\n    if (realTime <= 0) {\n      if (this.ticTocPlayingStatus) {\n        this.ticToc.pause()\n        this.ticToc.currentTime = 0\n        this.ticTocPlayingStatus = false\n      }\n      this.beep.play()\n      clearInterval(this.interval)\n      this.myList[this.index].isAchieved = true\n      this.myList[this.index].finishedDay = TODAY\n      this.index = -1\n      this.showContent = <i className=\"fas fa-volume-up\"></i>\n    } else if (this.stayWorking >= this.options.workingTime) {\n      this.showContent = 'Take Break'\n      this.breakTimeSound.play()\n      this.pause()\n    }\n    this.setState({ alter: !this.state.alter })\n    window.localStorage.setItem('todo-list', JSON.stringify(this.myList))\n    window.localStorage.setItem(\n      'working-data',\n      JSON.stringify(this._createObjectFromMap(this.working, this._createObjectFromMap))\n    )\n  }\n\n  startWork(id: number): void {\n    if (this.stayWorking < this.options.workingTime) {\n      clearInterval(this.interval)\n      this.index = this.myList.findIndex(item => item.id === id)\n      const item = this.myList[this.index]\n      if (item !== undefined) {\n        this.button = true\n        this.selected = true\n        this.playPauseEffect = true\n        let realTime: number = countSeconds(item.timeLeft)\n        if (realTime > 0) {\n          --realTime\n          this._workingOn(realTime, item)\n          this.interval = setInterval(() => {\n            --realTime\n            this._workingOn(realTime, item)\n          }, 1000)\n        } else {\n          this.myList[this.index].isAchieved = true\n          this.myList[this.index].finishedDay = today()\n          this.index = -1\n          this.selected = false\n          this.setState(state => ({\n            ...state,\n            alert: !state.alter,\n          }))\n          window.localStorage.setItem('todo-list', JSON.stringify(this.myList))\n          window.localStorage.setItem(\n            'working-data',\n            JSON.stringify(this._createObjectFromMap(this.working, this._createObjectFromMap))\n          )\n        }\n      }\n    } else {\n      this.index = this.myList.findIndex(item => item.id === id)\n      const item = this.myList[this.index]\n      if (item !== undefined) {\n        this.selected = true\n      }\n      this.pause()\n    }\n  }\n\n  stopAlarm(): void {\n    this.selected = false\n    this.beep.pause()\n    this.beep.currentTime = 0\n    this.setState({ alter: !this.state.alter })\n  }\n\n  removeWork(id: number): void {\n    this.index = this.myList.findIndex(item => item.id === id)\n    if (id !== null && this.myList[this.index] !== undefined) {\n      this.selected = false\n      clearInterval(this.interval)\n      this.myList = this.myList.filter((item, index) => index !== this.index)\n      this.index = -1\n      window.localStorage.setItem('todo-list', JSON.stringify(this.myList))\n      this.setState(state => ({\n        ...state,\n        alert: !state.alter,\n      }))\n    }\n  }\n\n  stopWork(): void {\n    if (this.index !== -1) {\n      this.selected = false\n      clearInterval(this.interval)\n      this.index = -1\n      this.setState(state => ({\n        ...state,\n        alert: !state.alter,\n      }))\n    }\n  }\n\n  reprise() {\n    if (this.index !== -1) {\n      this.startWork(this.myList[this.index].id)\n    }\n  }\n\n  remove() {\n    if (this.index !== -1) {\n      clearInterval(this.interval)\n      this.removeWork(this.index)\n    }\n  }\n\n  pause() {\n    clearInterval(this.interval)\n    this.button = false\n    if (this.ticTocPlayingStatus) {\n      this.ticToc.pause()\n      this.ticTocPlayingStatus = false\n    }\n    if (this.stayWorking >= this.options.workingTime) {\n      this.playPauseEffect = false\n    }\n    this.interval = setInterval(() => {\n      if (this.stayWorking >= this.options.workingTime) {\n        if (this.leaveWorking > 0) {\n          this.leaveWorking--\n        } else {\n          this.leaveWorking = this.options.reposeTime\n          this.stayWorking = 0\n          this.reprise()\n        }\n      }\n      this.setState({ alter: !this.state.alter })\n    }, 1000)\n    this.setState({ alter: !this.state.alter })\n  }\n\n  updateOptions(stay: number, leave: number) {\n    this.options.workingTime = stay\n    this.options.reposeTime = leave\n    window.localStorage.setItem('options', JSON.stringify(this.options))\n  }\n\n  render() {\n    const NOW = new Date()\n    return (\n      <Switch>\n        <Route path=\"/add\" exact>\n          <TodoAdd addElement={this.addElement} groups={this.groups} />\n        </Route>\n        <Route\n          path=\"/modify/:id\"\n          render={props => (\n            <TodoAdd\n              item={\n                (!isNaN(parseInt(props.match.params.id)) &&\n                  parseInt(props.match.params.id) >= 0 &&\n                  this.myList[\n                    this.myList.findIndex(item => item.id === parseInt(props.match.params.id))\n                  ]) as Job\n              }\n              addElement={this.modify}\n              groups={this.groups}\n              modify={true}\n            />\n          )}\n        />\n        <Route\n          path=\"/note/:id\"\n          render={props => (\n            <Note\n              item={\n                ((!isNaN(parseInt(props.match.params.id)) &&\n                  parseInt(props.match.params.id) >= 0 &&\n                  this.myList[\n                    this.myList.findIndex(item => item.id === parseInt(props.match.params.id))\n                  ]) || { name: 'Not Found', note: 'Not Found' }) as Job\n              }\n            />\n          )}\n        />\n        <Route path=\"/settings\" exact>\n          <Param options={this.options} updateOptions={this.updateOptions} />\n        </Route>\n        <Route path=\"/\">\n          {this.selected && (\n            <Show\n              name={(this.index !== -1 && this.myList[this.index].name) || 'Click to stop alarm'}\n              time={this.showContent}\n              currentDate={today()}\n              currentTime={reformate(NOW.getHours()) + ':' + reformate(NOW.getMinutes())}\n              stop={this.stopWork}\n              reprise={this.reprise}\n              remove={this.remove}\n              pause={this.pause}\n              completed={this.stopAlarm}\n              button={this.button}\n              controllers={this.index !== -1}\n              playPauseEffect={this.playPauseEffect}\n            />\n          )}\n          <TodoAddList\n            myList={this.myList}\n            startWork={this.startWork}\n            removeWork={this.removeWork}\n            working={this.working}\n            index={this.index}\n          />\n        </Route>\n      </Switch>\n    )\n  }\n}\n\nrender(\n  <React.StrictMode>\n    <Router>\n      <Header />\n      <div className=\"container\">\n        <Container />\n        <div className=\"row\">\n          <div className=\"col\">\n            <p className=\"text-center py-5 text-dark font-weight-bold\">Created By @Hachour Fouad</p>\n          </div>\n        </div>\n      </div>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}